{"version":3,"sources":["pages/Lesson-02/index.js","pages/Lesson-02/code.js","components/Link/index.js"],"names":["Lesson02","className","text","theme","hybrid","language","Link","link","href","target","rel"],"mappings":"2JAuLeA,UAjLE,kBACf,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,2EACA,kBAAC,IAAD,CAAWC,KCXD,meDWmBC,MAAOC,IAAQC,SAAS,QACrD,4BACE,iLACA,iIACA,yTACA,2NAKN,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,OACb,qHACA,kBAAC,IAAD,CAAWC,KCAD,+bDAmBC,MAAOC,IAAQC,SAAS,QACrD,kBAAC,IAAD,CAAWH,KCuBD,+UDvBmBC,MAAOC,IAAQC,SAAS,QACrD,4BACE,4LACA,8LACA,oNACA,sLACA,kPAKN,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,OACb,2EACA,goCAMA,2BACE,4EADF,mlDAQA,mTACA,4BACE,2JACA,8UAEF,ulBAEkE,IAChE,mDAHF,KAKA,szBAKA,qzBAIE,sEAJF,2oBAQA,kBAAC,IAAD,CAAWC,KCXD,+bDWmBC,MAAOC,IAAQC,SAAS,QACrD,kBAAC,IAAD,CAAWH,KCYD,qWDZmBC,MAAOC,IAAQC,SAAS,QAErD,iGACA,saAEmB,0CAFnB,wBAE8C,0CAF9C,UAEsE,IACpE,sCAHF,KAKA,kBAAC,IAAD,CAAWH,KCqBD,yfDrBmBC,MAAOC,IAAQC,SAAS,QACrD,kBAAC,IAAD,CAAWH,KCiDD,iTDjDmBC,MAAOC,IAAQC,SAAS,QAErD,iGACA,sVACA,kBAAC,IAAD,CAAWH,KC0DD,2MD1DmBC,MAAOC,IAAQC,SAAS,QAErD,gIACA,0dAEgB,mDAFhB,4hBAMA,kBAAC,IAAD,CAAWH,KC2DD,0ZD3DmBC,MAAOC,IAAQC,SAAS,UAIzD,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,OACb,4CACA,4BACE,4BACE,kBAACK,EAAA,EAAD,CACEC,KAAK,0EACLL,KAAK,8IAGT,4BACE,kBAACI,EAAA,EAAD,CACEC,KAAK,qCACLL,KAAK,gGAGT,4BACE,kBAACI,EAAA,EAAD,CAAMC,KAAK,sBAAsBL,KAAK,sFAExC,4BACE,kBAACI,EAAA,EAAD,CAAMC,KAAK,sBAAsBL,KAAK,qFAM9C,yBAAKD,UAAU,OACb,yBAAKA,UAAU,OACb,kKACA,4BACE,4BACE,kBAACK,EAAA,EAAD,CAAMC,KAAK,2BAA2BL,KAAK,cAE7C,4BACE,kBAACI,EAAA,EAAD,CAAMC,KAAK,sBAAsBL,KAAK,gBAExC,4BACE,kBAACI,EAAA,EAAD,CACEC,KAAK,qCACLL,KAAK,qBAGT,4BACE,kBAACI,EAAA,EAAD,CACEC,KAAK,iCACLL,KAAK,0BAOf,yBAAKD,UAAU,OACb,yBAAKA,UAAU,OACb,8KACA,4BACE,4BACE,kBAACK,EAAA,EAAD,CACEC,KAAK,+CACLL,KAAK,wCAGT,4BACE,kBAACI,EAAA,EAAD,CACEC,KAAK,yEACLL,KAAK,6DAGT,4BACE,kBAACI,EAAA,EAAD,CACEC,KAAK,uEACLL,KAAK,sC,gCE9KnB,oBAQeI,IANF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAML,EAAT,EAASA,KAAT,OACX,uBAAGM,KAAMD,EAAME,OAAO,SAASC,IAAI,uBAChCR","file":"static/js/lesson-02.cff39bef.chunk.js","sourcesContent":["import React from 'react';\nimport { CopyBlock, hybrid } from 'react-code-blocks';\nimport Link from '../../components/Link';\n\nimport * as code from './code';\n\nconst Lesson02 = () => (\n  <div className=\"container lesson-02\">\n    <div className=\"row\">\n      <div className=\"col\">\n        <h3>1. Инлайн CSS</h3>\n        <CopyBlock text={code.code1} theme={hybrid} language=\"jsx\" />\n        <ul>\n          <li>Плохая производительность</li>\n          <li>Не масштабируется</li>\n          <li>Ограниченные возможности (псевдоэлементы, медиа и т. п.)</li>\n          <li>Нет инструментов и сложно дебажить</li>\n        </ul>\n      </div>\n    </div>\n\n    <div className=\"row\">\n      <div className=\"col\">\n        <h2>2. Ванильный CSS или SASS</h2>\n        <CopyBlock text={code.code2} theme={hybrid} language=\"css\" />\n        <CopyBlock text={code.code3} theme={hybrid} language=\"jsx\" />\n        <ul>\n          <li>Ванильный CSS не масштабируется</li>\n          <li>Глобальное пространство имен</li>\n          <li>Приходится использовать BEM-нотацию</li>\n          <li>Вложенность селекторов без BEM</li>\n          <li>Проблематичное удаление мертвого кода</li>\n        </ul>\n      </div>\n    </div>\n\n    <div className=\"row\">\n      <div className=\"col\">\n        <h2>3. CSS-модули</h2>\n        <p>\n          Согласно определению из репозитория, CSS-модули — это CSS-файлы, в\n          которых все классы по умолчанию находятся в локальной области\n          видимости. Этот подход был разработан, что бы решить проблему\n          глобальной области видимости в CSS.\n        </p>\n        <p>\n          <strong>CSS-модули</strong> — это не официальная спецификация, они не\n          имплементированы в браузеры. Это процесс, запускаемый на стадии сборки\n          проекта (например, с помощью Webpack), в результате выполнения\n          которого имена классов и селекторы изменяются так, чтобы образовалась\n          своего рода локальная область видимости (что-то вроде пространства\n          имен).\n        </p>\n        <p>CSS-модули гарантируют, что все стили одного компонента:</p>\n        <ul>\n          <li>Находятся в одном месте</li>\n          <li>Применяются только к этому компоненту и никакому другому</li>\n        </ul>\n        <p>\n          Create React App поддерживает CSS-модули из коробки, все что\n          необходимо сделать это называть файлы стилей согласно конвенции{' '}\n          <code>[name].module.css</code>.\n        </p>\n        <p>\n          Использование напоминает обычный CSS, за тем исключением, что все\n          имена классов обфусцируются. В результирующем CSS получаем уникальное\n          имя класса в формате\n        </p>\n        <p>\n          Использование напоминает обычный CSS, за тем исключением, что все\n          имена классов обфусцируются. В результирующем CSS получаем уникальное\n          имя класса в формате\n          <code>[filename]\\_[classname]\\_\\_[hash]</code>. CSS-модули решают\n          проблему глобального пространсва имен с помощью мапинга классов из\n          CSS-файла в объект с ключами по имени класса.\n        </p>\n        <CopyBlock text={code.code4} theme={hybrid} language=\"css\" />\n        <CopyBlock text={code.code5} theme={hybrid} language=\"jsx\" />\n\n        <h3>3.1. Композиция</h3>\n        <p>\n          В CSS-модулях можно делать композицию стилей прямо в CSS-файле с\n          помощью свойства <code>composes</code>, как <code>@extends</code> в{' '}\n          <code>SASS</code>.\n        </p>\n        <CopyBlock text={code.code6} theme={hybrid} language=\"css\" />\n        <CopyBlock text={code.code7} theme={hybrid} language=\"jsx\" />\n\n        <h3>3.2. Переменные</h3>\n        <p>В CSS-модулях также есть возможность использовать переменные.</p>\n        <CopyBlock text={code.code8} theme={hybrid} language=\"css\" />\n\n        <h3>3.3. Глобальные стили</h3>\n        <p>\n          Для того чтобы сделать стиль глобальным, необходимо обернуть селектор\n          в конструкцию <code>:global(selector)</code>. Селекторы тегов по\n          умолчанию будут в глобальной области видимости, CSS-модули обфусцируют\n          только классы.\n        </p>\n        <CopyBlock text={code.code9} theme={hybrid} language=\"css\" />\n      </div>\n    </div>\n\n    <div className=\"row\">\n      <div className=\"col\">\n        <h2>4. CSS-in-JS</h2>\n        <ul>\n          <li>\n            <Link\n              link=\"https://css-live.ru/articles/vsyo-chto-vam-nuzhno-znat-o-css-in-js.html\"\n              text=\"Всё, что вам нужно знать о CSS-in-JS\"\n            />\n          </li>\n          <li>\n            <Link\n              link=\"https://www.styled-components.com/\"\n              text=\"Документация Styled Components\"\n            />\n          </li>\n          <li>\n            <Link link=\"https://emotion.sh/\" text=\"Документация Emotion\" />\n          </li>\n          <li>\n            <Link link=\"https://cssinjs.org\" text=\"Документация JSS\" />\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div className=\"row\">\n      <div className=\"col\">\n        <h2>5. Библиотеки компонентов</h2>\n        <ul>\n          <li>\n            <Link link=\"https://material-ui.com/\" text=\"MATERIAL\" />\n          </li>\n          <li>\n            <Link link=\"https://ant.design/\" text=\"Ant Design\" />\n          </li>\n          <li>\n            <Link\n              link=\"https://react-bootstrap.github.io/\"\n              text=\"React Bootstrap\"\n            />\n          </li>\n          <li>\n            <Link\n              link=\"https://react.semantic-ui.com/\"\n              text=\"Semantic UI React\"\n            />\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div className=\"row\">\n      <div className=\"col\">\n        <h2>6. Дополнительные материалы</h2>\n        <ul>\n          <li>\n            <Link\n              link=\"https://glenmaddern.com/articles/css-modules\"\n              text=\"CSS-Modules: Welcome to the Future\"\n            />\n          </li>\n          <li>\n            <Link\n              link=\"https://gist.github.com/threepointone/731b0c47e78d8350ae4e105c1a83867d\"\n              text=\"&#8236;In what way is JS any more maintainable than CSS?\"\n            />\n          </li>\n          <li>\n            <Link\n              link=\"https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660\"\n              text=\"A Unified Styling Language\"\n            />\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Lesson02;\n","export const code1 = `const buttonStyles = {\n  display: 'inline-flex',\n  margin: '0 4px',\n  padding: '8px 24px',\n  border: 0,\n  borderRadius: 2,\n  fontSize: 14,\n  fontFamily: 'inherit',\n};\n\nconst Button = ({ type = 'button', label, disabled }) => (\n  <button\n    type={type}\n    disabled={disabled}\n    style={{\n      ...buttonStyles,\n      backgroundColor: disabled ? '#0000001f' : '#2196f3',\n      color: disabled ? '#00000042' : '#ffffff',\n    }}\n  >\n    {label}\n  </button>\n);`;\n\nexport const code2 = `/* Button.css */\n.Button {\n  display: inline-flex;\n  margin: 0 4px;\n  padding: 8px 24px;\n  border: 0;\n  border-radius: 2px;\n  color: #ffffff;\n  font-size: 14px;\n  font-family: inherit;\n  background-color: #2196f3;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n}\n\n.Button:hover,\n.Button:focus {\n  background-color: #1976d2;\n}\n\n.Button-disabled {\n  background-color: #0000001f;\n  color: #00000042;\n}`;\n\nexport const code3 = `// Button.js\nimport './Button.css';\n\nconst Button = ({ type = 'button', label, disabled }) => {\n  const btnClasses = ['Button'];\n\n  if (disabled) {\n    btnClasses.push('Button-disabled');\n  }\n\n  return (\n    <button type={type} disabled={disabled} className={btnClasses.join(' ')}>\n      {label}\n    </button>\n  );\n};`;\n\nexport const code4 = `/* Button.module.css */\n.button {\n  display: inline-flex;\n  margin: 0 4px;\n  padding: 8px 24px;\n  border: 0;\n  border-radius: 2px;\n  color: #ffffff;\n  font-size: 14px;\n  font-family: inherit;\n  background-color: #2196f3;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n}\n\n.button:hover,\n.button:focus {\n  background-color: #1976d2;\n}\n\n.disabled {\n  background-color: #0000001f;\n  color: #00000042;\n}`;\n\nexport const code5 = `// Button.js\nimport styles from './Button.module.css';\n\nconst Button = ({ type = 'button', label, disabled }) => {\n  const btnClasses = [styles.button];\n\n  if (disabled) {\n    btnClasses.push(styles.disabled);\n  }\n\n  return (\n    <button className={btnClasses.join(' ')} type={type} disabled={disabled}>\n      {label}\n    </button>\n  );\n};`;\n\nexport const code6 = `/* Button.module.css */\n.button {\n  display: inline-flex;\n  margin: 0 4px;\n  padding: 8px 24px;\n  border: 0;\n  border-radius: 2px;\n  font-size: 14px;\n  font-family: inherit;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n}\n\n.button:hover,\n.button:focus {\n  background-color: #1976d2;\n}\n\n.active {\n  composes: button;\n  color: #ffffff;\n  background-color: #2196f3;\n}\n\n.disabled {\n  composes: button;\n  color: #00000042;\n  background-color: #0000001f;\n}`;\n\nexport const code7 = `// Button.js\nimport styles from './Button.module.css';\n\nconst Button = ({ type = 'button', label, disabled }) => {\n  const btnClass = disabled ? styles.disabled : styles.active;\n\n  return (\n    <button className={btnClass} type={type} disabled={disabled}>\n      {label}\n    </button>\n  );\n};`;\n\nexport const code8 = `/* variables.module.css */\n@value font-stack: Roboto, Arial, sans-serif;\n\n/* Button.module.css */\n@value font-stack from 'path/to/variables.module.css';\n\n.button {\n  font-family: font-stack;\n}`;\n\nexport const code9 = `/* Глобален по умолчанию */\nbody {\n  color: #fff;\n  font-size: 16px;\n}\n\n/* Так класс можно сделать глобальным */\n:global(.my-class) {\n  color: #2196f3;\n}`;\n","import React from 'react';\n\nconst Link = ({ link, text }) => (\n  <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n    {text}\n  </a>\n);\n\nexport default Link;\n"],"sourceRoot":""}